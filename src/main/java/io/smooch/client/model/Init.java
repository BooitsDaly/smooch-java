/*
 * Smooch
 * The Smooch API is a unified interface for powering messaging in your customer experiences across every channel. Our API speeds access to new markets, reduces time to ship, eliminates complexity, and helps you build the best experiences for your customers. For more information, visit our [official documentation](https://docs.smooch.io).
 *
 * OpenAPI spec version: 1.5
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.smooch.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.smooch.client.model.DeviceInit;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Init
 */

public class Init {
  @SerializedName("device")
  private DeviceInit device = null;

  @SerializedName("userId")
  private String userId = null;

  public Init device(DeviceInit device) {
    this.device = device;
    return this;
  }

   /**
   * Get device
   * @return device
  **/
  @ApiModelProperty(required = true, value = "")
  public DeviceInit getDevice() {
    return device;
  }

  public void setDevice(DeviceInit device) {
    this.device = device;
  }

  public Init userId(String userId) {
    this.userId = userId;
    return this;
  }

   /**
   * The app user's userId. If specified, this ID can be used to invoke APIs. If left blank, an ID will automatically be generated. 
   * @return userId
  **/
  @ApiModelProperty(value = "The app user's userId. If specified, this ID can be used to invoke APIs. If left blank, an ID will automatically be generated. ")
  public String getUserId() {
    return userId;
  }

  public void setUserId(String userId) {
    this.userId = userId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Init init = (Init) o;
    return Objects.equals(this.device, init.device) &&
        Objects.equals(this.userId, init.userId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(device, userId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Init {\n");
    
    sb.append("    device: ").append(toIndentedString(device)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

