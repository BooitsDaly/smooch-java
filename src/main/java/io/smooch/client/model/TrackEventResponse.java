/*
 * Smooch
 * The Smooch API is a unified interface for powering messaging in your customer experiences across every channel. Our API speeds access to new markets, reduces time to ship, eliminates complexity, and helps you build the best experiences for your customers. For more information, visit our [official documentation](https://docs.smooch.io).
 *
 * OpenAPI spec version: 1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.smooch.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * TrackEventResponse
 */

public class TrackEventResponse {
  @SerializedName("conversationUpdated")
  private Boolean conversationUpdated = null;

  public TrackEventResponse conversationUpdated(Boolean conversationUpdated) {
    this.conversationUpdated = conversationUpdated;
    return this;
  }

   /**
   * Flag indicating if the conversation was updated.
   * @return conversationUpdated
  **/
  @ApiModelProperty(example = "null", value = "Flag indicating if the conversation was updated.")
  public Boolean getConversationUpdated() {
    return conversationUpdated;
  }

  public void setConversationUpdated(Boolean conversationUpdated) {
    this.conversationUpdated = conversationUpdated;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TrackEventResponse trackEventResponse = (TrackEventResponse) o;
    return Objects.equals(this.conversationUpdated, trackEventResponse.conversationUpdated);
  }

  @Override
  public int hashCode() {
    return Objects.hash(conversationUpdated);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TrackEventResponse {\n");
    
    sb.append("    conversationUpdated: ").append(toIndentedString(conversationUpdated)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

